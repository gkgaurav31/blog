<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-09-25T01:04:46+05:30</updated><id>/feed.xml</id><title type="html">Gaurav’s GitHub Pages!</title><subtitle>Just another blog. </subtitle><entry><title type="html">Log Originating Client IP on Linux App Service (Tomcat)</title><link href="/2021/09/25/log-originating-client-ip-on-linux-app-service-tomcat.html" rel="alternate" type="text/html" title="Log Originating Client IP on Linux App Service (Tomcat)" /><published>2021-09-25T00:39:00+05:30</published><updated>2021-09-25T00:39:00+05:30</updated><id>/2021/09/25/log-originating-client-ip-on-linux-app-service-tomcat</id><content type="html" xml:base="/2021/09/25/log-originating-client-ip-on-linux-app-service-tomcat.html">&lt;blockquote&gt;
  &lt;p&gt;The X-Forwarded-For (XFF) header is a de-facto standard header for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or a load balancer. When traffic is intercepted between clients and servers, server access logs contain the IP address of the proxy or load balancer only. To see the original IP address of the client, the X-Forwarded-For request header is used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For&quot;&gt;MDN Web Docs: X-Forwarded-For&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can get the value of this header using multiple ways. One of the common ways is via code. Here is a sample &lt;strong&gt;Java Code&lt;/strong&gt; you could use:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getClientIp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remoteAddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;remoteAddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-FORWARDED-FOR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remoteAddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remoteAddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;remoteAddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRemoteAddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remoteAddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Credits:&lt;/strong&gt; &lt;a href=&quot;https://mkyong.com/java/how-to-get-client-ip-address-in-java/&quot;&gt;Mkyong: How to get client Ip Address in Java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this blog, I will be covering how this can be done by configuring Tomcat so that we can get it directly from the Access logs of Tomcat.&lt;/p&gt;

&lt;p&gt;Follow the below steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Go to the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/resources-kudu&quot;&gt;Kudu&lt;/a&gt; and use &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/configure-linux-open-ssh-session&quot;&gt;SSH&lt;/a&gt; into your application container. [The app needs to be running for this to work]
https://«webappname».scm.azurewebsites.net/webssh/host&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Copy default Tomcat configurations to &lt;strong&gt;/home&lt;/strong&gt;.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /home/tomcat  
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; /usr/local/tomcat/conf /home/tomcat/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Edit the &lt;strong&gt;server.xml&lt;/strong&gt; under &lt;strong&gt;/home/tomcat/conf&lt;/strong&gt;&lt;br /&gt;
Replace the following:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- In AppService below is customized to add : unpackWARs=&quot;${site.unpackWARs}&quot; and workDir=&quot;${site.tempdir}--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Host&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;localhost&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;appBase=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.root}&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;unpackWARs=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.unpackWARs}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoDeploy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;workDir=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.tempdir}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--
        &amp;lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&amp;gt;
        --&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern=&quot;common&quot; --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- In AppService prefix and pattern are customized--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.AccessLogValve&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directory=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.logdir}/http/RawLogs&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;site_access_log.${catalina.instance.name}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;suffix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.txt&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b %D %{x-arr-log-id}i&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Host&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;with:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- In AppService below is customized to add : unpackWARs=&quot;${site.unpackWARs}&quot; and workDir=&quot;${site.tempdir}--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Host&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;localhost&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;appBase=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.root}&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;unpackWARs=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.unpackWARs}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoDeploy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;workDir=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.tempdir}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--
        &amp;lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&amp;gt;
        --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Remote IP Valve --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.RemoteIpValve&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern=&quot;common&quot; --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- In AppService prefix and pattern are customized--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.AccessLogValve&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directory=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${site.logdir}/http/RawLogs&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;site_access_log.${catalina.instance.name}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;suffix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.txt&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%{X-Forwarded-For}i %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b %D %{x-arr-log-id}i&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Host&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, restart the WebApp and you should see the originating client IP in the access logs available under &lt;strong&gt;/home/LogFiles/http/RawLogs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/clientip-tomcat.jpg&quot; alt=&quot;Access Logs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it! :v:&lt;/p&gt;</content><author><name></name></author><summary type="html">The X-Forwarded-For (XFF) header is a de-facto standard header for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or a load balancer. When traffic is intercepted between clients and servers, server access logs contain the IP address of the proxy or load balancer only. To see the original IP address of the client, the X-Forwarded-For request header is used.</summary></entry><entry><title type="html">Using Minikube on Linux (Ubuntu)</title><link href="/2021/06/29/using-minikube-on-linux-ubuntu.html" rel="alternate" type="text/html" title="Using Minikube on Linux (Ubuntu)" /><published>2021-06-29T16:47:00+05:30</published><updated>2021-06-29T16:47:00+05:30</updated><id>/2021/06/29/using-minikube-on-linux-ubuntu</id><content type="html" xml:base="/2021/06/29/using-minikube-on-linux-ubuntu.html">&lt;p&gt;Minikube quickly sets up a local Kubernetes cluster, which is great for learning!&lt;/p&gt;

&lt;p&gt;These are the pre-requisites, as of today, as per the minikube documentation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2 CPUs or more&lt;br /&gt;
2GB of free memory&lt;br /&gt;
20GB of free disk space&lt;br /&gt;
Internet connection&lt;br /&gt;
Container or virtual machine manager, such as: Docker, Hyperkit, Hyper-V, KVM, Parallels, Podman, VirtualBox, or VMWare&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Follow these steps to get started with minikube -&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arch&lt;/code&gt; command to get the architecture:&lt;br /&gt;
In our case, it is: &lt;strong&gt;x86_64&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;install-minikube&quot;&gt;Install minikube&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo dpkg -i minikube_latest_amd64.deb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://minikube.sigs.k8s.io/docs/start/&quot;&gt;Install minikube on x86-64 Linux using Debian package&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you see the below error, you would need to install one of the Supported Drivers for Minikube. In this case, we will be using Docker.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-TEXT&quot;&gt;$ minikube start
😄  minikube v1.21.0 on Ubuntu 20.04
👎  Unable to pick a default driver. Here is what was considered, in preference order:
    ▪ docker: Not installed: exec: &quot;docker&quot;: executable file not found in $PATH
    ▪ kvm2: Not installed: exec: &quot;virsh&quot;: executable file not found in $PATH
    ▪ vmware: Not installed: exec: &quot;docker-machine-driver-vmware&quot;: executable file not found in $PATH
    ▪ podman: Not installed: exec: &quot;podman&quot;: executable file not found in $PATH
    ▪ virtualbox: Not installed: unable to find VBoxManage in $PATH

❌  Exiting due to DRV_NOT_DETECTED: No possible driver was detected. Try specifying --driver, or see https://minikube.sigs.k8s.io/docs/start/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;install-docker&quot;&gt;Install Docker&lt;/h4&gt;

&lt;p&gt;Install docker from here: &lt;a href=&quot;https://docs.docker.com/engine/install/ubuntu/&quot;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We would get the following error if we try to start minkube now:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo minikube start
😄  minikube v1.21.0 on Ubuntu 20.04
✨  Automatically selected the docker driver. Other choices: none, ssh
🛑  The &quot;docker&quot; driver should not be used with root privileges.
💡  If you are running minikube within a VM, consider using --driver=none:
📘    https://minikube.sigs.k8s.io/docs/reference/drivers/none/

❌  Exiting due to DRV_AS_ROOT: The &quot;docker&quot; driver should not be used with root privileges.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;manage-docker-as-non-root-user&quot;&gt;Manage Docker as non-root user&lt;/h4&gt;

&lt;p&gt;Follow the steps mentioned here to manage Docker as a non-root user: &lt;a href=&quot;https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user&quot;&gt;https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are ready now ready to start your minikube single node cluster.&lt;/p&gt;

&lt;h3 id=&quot;using-minikube&quot;&gt;Using Minikube&lt;/h3&gt;

&lt;h4 id=&quot;start-minikube&quot;&gt;Start Minikube&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;minikube start
😄  minikube v1.21.0 on Ubuntu 20.04
✨  Automatically selected the docker driver. Other choices: none, ssh
👍  Starting control plane node minikube &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;cluster minikube
🚜  Pulling base image ...
💾  Downloading Kubernetes v1.20.7 preload ...
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; preloaded-images-k8s-v11-v1...: 492.20 MiB / 492.20 MiB  100.00% 97.36 Mi
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; gcr.io/k8s-minikube/kicbase...: 359.09 MiB / 359.09 MiB  100.00% 12.86 Mi

🔥  Creating docker container &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPUs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;Memory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2200MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
🐳  Preparing Kubernetes v1.20.7 on Docker 20.10.7 ...
    ▪ Generating certificates and keys ...
    ▪ Booting up control plane ...
    ▪ Configuring RBAC rules ...
🔎  Verifying Kubernetes components...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
🌟  Enabled addons: default-storageclass, storage-provisioner
💡  kubectl not found. If you need it, try: &lt;span class=&quot;s1&quot;&gt;'minikube kubectl -- get pods -A'&lt;/span&gt;
🏄  Done! kubectl is now configured to use &lt;span class=&quot;s2&quot;&gt;&quot;minikube&quot;&lt;/span&gt; cluster and &lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt; namespace by default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;test&quot;&gt;Test&lt;/h4&gt;

&lt;p&gt;You can now use the minikube kubectl command to test if everything works.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;minikube kubectl &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; get pods &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; kubectl.sha256: 64 B / 64 B &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--------------------------&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 100.00% ? p/s 0s
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; kubectl: 38.36 MiB / 38.36 MiB &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-------------&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 100.00% 1.09 GiB p/s 200ms
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-74ff55c5b-ht448            0/1     Running   0          31s
kube-system   etcd-minikube                      0/1     Running   0          46s
kube-system   kube-apiserver-minikube            1/1     Running   0          46s
kube-system   kube-controller-manager-minikube   0/1     Running   0          46s
kube-system   kube-proxy-pq5hc                   1/1     Running   0          31s
kube-system   kube-scheduler-minikube            0/1     Running   0          46s
kube-system   storage-provisioner                1/1     Running   0          44s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;install-kubectl&quot;&gt;Install kubectl&lt;/h4&gt;

&lt;p&gt;The most common way to connect with you Kubernetes Cluster is by using kubectl command line tool.&lt;/p&gt;

&lt;p&gt;Install Kubectl from here: &lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/&quot;&gt;LINK&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;use-kubectl&quot;&gt;Use kubectl&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-74ff55c5b-ht448            1/1     Running   0          2m27s
kube-system   etcd-minikube                      1/1     Running   0          2m42s
kube-system   kube-apiserver-minikube            1/1     Running   0          2m42s
kube-system   kube-controller-manager-minikube   1/1     Running   0          2m42s
kube-system   kube-proxy-pq5hc                   1/1     Running   0          2m27s
kube-system   kube-scheduler-minikube            1/1     Running   0          2m42s
kube-system   storage-provisioner                1/1     Running   1          2m40s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;other-useful-commands&quot;&gt;Other useful commands&lt;/h4&gt;

&lt;p&gt;Access the Minikube dashboard remotely:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubectl proxy --address='0.0.0.0' --disable-filter=true&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Get dashboard URL:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minikube dashboard --url&lt;/code&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Minikube quickly sets up a local Kubernetes cluster, which is great for learning!</summary></entry><entry><title type="html">Remove Server Header from Nginx (Linux WebApp - Wordpress Image)</title><link href="/2021/04/08/remove-server-header-from-nginx-linux-webapp-wordpress-image.html" rel="alternate" type="text/html" title="Remove Server Header from Nginx (Linux WebApp - Wordpress Image)" /><published>2021-04-08T18:32:00+05:30</published><updated>2021-04-08T18:32:00+05:30</updated><id>/2021/04/08/remove-server-header-from-nginx-linux-webapp-wordpress-image</id><content type="html" xml:base="/2021/04/08/remove-server-header-from-nginx-linux-webapp-wordpress-image.html">&lt;p&gt;The Docker Image &lt;a href=&quot;https://hub.docker.com/r/appsvcorg/wordpress-alpine-php&quot;&gt;appsvcorg/wordpress-alpine-php:0.72&lt;/a&gt; for WordPress uses &lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt;. In order to remove the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server&quot;&gt;Server header&lt;/a&gt; of Nginx, you can follow the below steps:&lt;/p&gt;

&lt;h2 id=&quot;create-a-dockerfile&quot;&gt;CREATE A DOCKERFILE&lt;/h2&gt;

&lt;div class=&quot;language-Dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; appsvcorg/wordpress-alpine-php:0.72&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apk update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add nginx-mod-http-headers-more
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; nginx.conf /etc/nginx/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-nginxconf-file&quot;&gt;CREATE nginx.conf file&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-nginx.conf&quot;&gt;user  nginx;
worker_processes  auto;

load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;


events {
    worker_connections  2048;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    more_clear_headers 'Server';
    log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '
                      '$status $body_bytes_sent &quot;$http_referer&quot; '
                      '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';

    access_log  off;

    sendfile        on;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/modules-enabled/*.conf;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;build-the-image-and-push-it-to-your-docker-registry&quot;&gt;BUILD THE IMAGE (AND PUSH IT TO YOUR DOCKER REGISTRY)&lt;/h2&gt;

&lt;p&gt;docker build -t myapp .
docker rm -f test
docker run -d -p 8080:80 –name test myapp&lt;/p&gt;

&lt;h2 id=&quot;you-can-use-curl-to-test-locally-as-well&quot;&gt;YOU CAN USE CURL TO TEST LOCALLY AS WELL&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-curl&quot;&gt;curl http://localhost:8080 -I
HTTP/1.1 302 Found
Date: Thu, 08 Apr 2021 16:38:35 GMT
Content-Type: text/html; charset=UTF-8
Connection: keep-alive
X-Powered-By: PHP/7.2.13
Location: http://localhost:8080/wp-admin/setup-config.php
Fastcgi-Cache: MISS
X-Xss-Protection: 1; mode=block
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gkgaurav31/wordpress-alpine-php-0.72-test.git&quot;&gt;SOURCE CODE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s it. :v:&lt;/p&gt;</content><author><name></name></author><summary type="html">The Docker Image appsvcorg/wordpress-alpine-php:0.72 for WordPress uses Nginx. In order to remove the Server header of Nginx, you can follow the below steps:</summary></entry><entry><title type="html">Enable trace logs - Java Function App</title><link href="/2021/04/01/enable-trace-logs-java-function-app.html" rel="alternate" type="text/html" title="Enable trace logs - Java Function App" /><published>2021-04-01T22:28:00+05:30</published><updated>2021-04-01T22:28:00+05:30</updated><id>/2021/04/01/enable-trace-logs-java-function-app</id><content type="html" xml:base="/2021/04/01/enable-trace-logs-java-function-app.html">&lt;h2 id=&quot;enable-trace-logs---java-function-app&quot;&gt;Enable trace logs - Java Function App&lt;/h2&gt;

&lt;p&gt;The Java Functions use azure-functions-java-library which uses java.util.logging for logging. You could print the logs using the following code:&lt;/p&gt;

&lt;h3 id=&quot;code-snippet&quot;&gt;code snippet&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;context logtest fine&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;finer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;context logtest finer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;finest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;context logtest finest&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;context logtest info&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;context logtest warning&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;severe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;context logtest severe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’d notice that the anything above info level logs would not get printed by default. To log these, you would need to change the logging level at the Function Host level. This can be done using the following host.json:&lt;/p&gt;

&lt;h3 id=&quot;hostjson&quot;&gt;host.json&lt;/h3&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extensionBundle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.Azure.Functions.ExtensionBundle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[2.*, 3.0.0)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;logging&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;logLevel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Trace&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it! :v:&lt;/p&gt;</content><author><name></name></author><summary type="html">Enable trace logs - Java Function App</summary></entry><entry><title type="html">Using opencv-python on Linux App Service</title><link href="/opencv/python/azure_webapp/2021/03/31/using-opencv-python-on-linux-app-service.html" rel="alternate" type="text/html" title="Using opencv-python on Linux App Service" /><published>2021-03-31T22:54:00+05:30</published><updated>2021-03-31T22:54:00+05:30</updated><id>/opencv/python/azure_webapp/2021/03/31/using-opencv-python-on-linux-app-service</id><content type="html" xml:base="/opencv/python/azure_webapp/2021/03/31/using-opencv-python-on-linux-app-service.html">&lt;p&gt;The &lt;a href=&quot;https://pypi.org/project/opencv-python/&quot;&gt;opencv-python&lt;/a&gt; module in Python has certain OS level dependencies, which could be missing in certain environment or Docker images. You could obviously create your own Custom Docker Image and use that to run Python application on Azure WebApp for Containers. But that comes up with an overhead of maintaining the Docker Image. In order to use opencv-python (or any other module which have certain missing dependencies in the environment you are running in), you could make use of a Startup Script to install the required libraries. Using apt install command via webSSH directly would not work, since the files are non-persistent outside of /home. Read more about persistence &lt;a href=&quot;https://docs.microsoft.com/en-us/archive/blogs/waws/things-you-should-know-web-apps-and-linux#if-youre-persisting-files-only-the-home-directory-is-persistedapplies-to-web-app-for-containers&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, the idea is to run a startup command/script while the container is coming up as part of the init script. You would need to follow the below steps to achieve this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a &lt;strong&gt;mystart.sh&lt;/strong&gt; file in the &lt;strong&gt;/home&lt;/strong&gt; directory. (You could name it anything. Just remember to use the same name later)&lt;/li&gt;
  &lt;li&gt;On the Azure Portal of the Web App, under &lt;strong&gt;Configuration &amp;gt; General Settings &amp;gt; StartUp Command&lt;/strong&gt;, specify the path of this startup script as &lt;strong&gt;/home/mystart.sh&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;In your mystart.sh, you can add the following lines in case of a flask app:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt update
apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libgl1-mesa-glx &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libgomp1 &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
gunicorn &lt;span class=&quot;nt&quot;&gt;--bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0 &lt;span class=&quot;nt&quot;&gt;--timeout&lt;/span&gt; 600 app:app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Startup Command for Gunicorn: &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/developer/python/tutorial-deploy-app-service-on-linux-04#django-startup-commands&quot;&gt;LINK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could always add your own commands to the above bash script if you need to install other libraries.&lt;/p&gt;

&lt;p&gt;I hope this helps. :v:&lt;/p&gt;</content><author><name></name></author><category term="opencv" /><category term="python" /><category term="azure_webapp" /><summary type="html">The opencv-python module in Python has certain OS level dependencies, which could be missing in certain environment or Docker images. You could obviously create your own Custom Docker Image and use that to run Python application on Azure WebApp for Containers. But that comes up with an overhead of maintaining the Docker Image. In order to use opencv-python (or any other module which have certain missing dependencies in the environment you are running in), you could make use of a Startup Script to install the required libraries. Using apt install command via webSSH directly would not work, since the files are non-persistent outside of /home. Read more about persistence HERE</summary></entry><entry><title type="html">curl &amp;lt;3</title><link href="/2021/03/26/curl-3.html" rel="alternate" type="text/html" title="curl &amp;lt;3" /><published>2021-03-26T22:35:00+05:30</published><updated>2021-03-26T22:35:00+05:30</updated><id>/2021/03/26/curl-3</id><content type="html" xml:base="/2021/03/26/curl-3.html">&lt;p&gt;One of the most useful command line tools which I have come across is CURL. :heart:&lt;/p&gt;

&lt;p&gt;In this blog, I will mention some of ways we can make use of curl. I will keep adding more as and when I learn.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can use -I paramter to get the HTTP response code, headers etc. The browsers can cache data so sometimes you are not sure if tha response is from the cache. With curl from command line, you’re sure.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-curl&quot;&gt;curl https://www.wikipedia.org/ -I
HTTP/1.1 200 OK
Date: Fri, 26 Mar 2021 08:26:46 GMT
Cache-Control: s-maxage=86400, must-revalidate, max-age=3600
Server: ATS/8.0.8
ETag: W/&quot;10483-5be1dab9caf01&quot;
Last-Modified: Mon, 22 Mar 2021 10:38:46 GMT
Content-Type: text/html
Vary: Accept-Encoding
Age: 31310
X-Cache: cp5009 hit, cp5009 hit/111166
X-Cache-Status: hit-front
Server-Timing: cache;desc=&quot;hit-front&quot;, host;desc=&quot;cp5009&quot;
Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
Report-To: { &quot;group&quot;: &quot;wm_nel&quot;, &quot;max_age&quot;: 86400, &quot;endpoints&quot;: [{ &quot;url&quot;: &quot;https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&amp;amp;schema_uri=/w3c/reportingapi/network_error/1.0.0&quot; }] }
NEL: { &quot;report_to&quot;: &quot;wm_nel&quot;, &quot;max_age&quot;: 86400, &quot;failure_fraction&quot;: 0.05, &quot;success_fraction&quot;: 0.0}
Set-Cookie: WMF-Last-Access=26-Mar-2021;Path=/;HttpOnly;secure;Expires=Tue, 27 Apr 2021 12:00:00 GMT
Set-Cookie: WMF-Last-Access-Global=26-Mar-2021;Path=/;Domain=.wikipedia.org;HttpOnly;secure;Expires=Tue, 27 Apr 2021 12:00:00 GMT
X-Client-IP: 49.207.200.163
Set-Cookie: GeoIP=IN:KA:Bengaluru:12.96:77.59:v4; Path=/; secure; Domain=.wikipedia.org
Accept-Ranges: bytes
Content-Length: 66691
Connection: keep-alive
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Did you know you could send many requests using a single curl command? Here’s how:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-curl&quot;&gt;curl -I https://www.wikipedia.org?[1-100]
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">One of the most useful command line tools which I have come across is CURL. :heart:</summary></entry><entry><title type="html">Detect Tomcat Version change on Azure App Service when using Auto-Update… and more</title><link href="/tomcat/azure_webapp/2021/03/26/detect-tomcat-version-change-on-azure-app-service-when-using-auto-update-and-more.html" rel="alternate" type="text/html" title="Detect Tomcat Version change on Azure App Service when using Auto-Update… and more" /><published>2021-03-26T22:08:00+05:30</published><updated>2021-03-26T22:08:00+05:30</updated><id>/tomcat/azure_webapp/2021/03/26/detect-tomcat-version-change-on-azure-app-service-when-using-auto-update-and-more</id><content type="html" xml:base="/tomcat/azure_webapp/2021/03/26/detect-tomcat-version-change-on-azure-app-service-when-using-auto-update-and-more.html">&lt;p&gt;When using &lt;strong&gt;Auto-Update&lt;/strong&gt; for various stacks on Azure App Service, one of the common problems is to get notified when the version changes. We could follow the official &lt;a href=&quot;https://github.com/Azure/app-service-announcements/issues&quot;&gt;announcement page&lt;/a&gt; for any major changes. We can also create automation scripts to send notifications when such a change occurs. There are different ways in which this can be done. The idea is to check how the current stack version can be determined, and compare it with the previous versions. If it changes, trigger a notification, which itself can be done in numerous ways. In this blog, I will guide you to one of the several approaches you could take. This may not be the best option, but it will get your work done.&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/web-sites-monitor#alerts-and-autoscale&quot;&gt;Alerts&lt;/a&gt; on Azure App Service, you could setup an action to execute an Azure Function, Azure Logic App, Azure Automation etc. When there is a configuration change, the WebApp also restarts. Using these two data points, we could create an alert for &lt;strong&gt;“When the WebApp restarts, run Azure Automation to check the current Tomcat version and see if it has changed. Notify if it did.”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Kudu REST APIs (uses HTTP Basic Authentication) can be used to execute certain commands on Azure App Service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-curl&quot;&gt;curl --location --request POST 'https://&amp;lt;webappname&amp;gt;.scm.azurewebsites.net/api/command' \
--header 'Authorization: Basic xxxxxxxxxxxx' \
--header 'Content-Type: application/json' \
--header 'Cookie: ARRAffinity=b5a9cc36272cdc0ce98dd1d4591de2a3387e634d23af23b5cfacc2627fff9108; ARRAffinitySameSite=b5a9cc36272cdc0ce98dd1d4591de2a3387e634d23af23b5cfacc2627fff9108' \
--data-raw '{
    &quot;command&quot;: '\''echo %AZURE_TOMCAT90_HOME%'\'',
    &quot;dir&quot;: '\''site'\''
}'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return the value of &lt;strong&gt;AZURE_TOMCAT90_HOME&lt;/strong&gt;, which contains the Tomcat version as well. The environment variable would be different for different frameworks, stack and even major version of same stack. Now that we have a way to get the Tomcat version, we would just need a way to automate it.&lt;/p&gt;

&lt;p&gt;General steps which you would need to follow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create a Runbook in Azure Automation to detect when the Tomcat version has changed. We could store the current version in a variable. The automation can use the above Kudu REST API to get the current version being used. If both are NOT the same, send a notification.
You could send e-mails using another Azure Automation if needed.
Refer to this documentation: &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/automation/automation-send-email&quot;&gt;Send an email from a runbook
&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once we have the automation in place, we need a way to trigger it based on certain conditions. App Service alerts can help us here. You could create an Alert which runs when a WebApp is restarted. The alert can also call the Azure Automation as its &lt;strong&gt;action&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a simple Python 3 runbook script which you could use:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python3
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;automationassets&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://gauktomcatwin.scm.azurewebsites.net/api/command'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;myobj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'command'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'echo %AZURE_TOMCAT90_HOME%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dir'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'site'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;automationassets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_automation_variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;automationassets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_automation_variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;previous_tomcat_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;automationassets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_automation_variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tomcat_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;current_tomcat_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Output&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;automationassets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_automation_variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tomcat_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_tomcat_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous_tomcat_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_tomcat_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No Tomcat update. Version: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_tomcat_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Tomcat version has changed from &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previous_tomcat_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; to &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_tomcat_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#more code to send email to notify users
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With just the above steps, you have a place to check if the Tomcat version has changed. This can be extended to a great extent. Using the same KUDU API, you could run many different commands to check various other configurations.&lt;/p&gt;

&lt;p&gt;I hope this helps. :v:&lt;/p&gt;</content><author><name></name></author><category term="tomcat" /><category term="azure_webapp" /><summary type="html">When using Auto-Update for various stacks on Azure App Service, one of the common problems is to get notified when the version changes. We could follow the official announcement page for any major changes. We can also create automation scripts to send notifications when such a change occurs. There are different ways in which this can be done. The idea is to check how the current stack version can be determined, and compare it with the previous versions. If it changes, trigger a notification, which itself can be done in numerous ways. In this blog, I will guide you to one of the several approaches you could take. This may not be the best option, but it will get your work done.</summary></entry><entry><title type="html">DBCP on Azure App Service Linux (MySQL)</title><link href="/dbcp/azure_webapp/mysql/2021/03/25/dbcp-on-azure-app-service-linux-mysql.html" rel="alternate" type="text/html" title="DBCP on Azure App Service Linux (MySQL)" /><published>2021-03-25T18:15:00+05:30</published><updated>2021-03-25T18:15:00+05:30</updated><id>/dbcp/azure_webapp/mysql/2021/03/25/dbcp-on-azure-app-service-linux-mysql</id><content type="html" xml:base="/dbcp/azure_webapp/mysql/2021/03/25/dbcp-on-azure-app-service-linux-mysql.html">&lt;p&gt;Many Apache projects support interaction with a relational database. Creating a new connection for each user can be time consuming (often requiring multiple seconds of clock time), in order to perform a database transaction that might take milliseconds. Opening a connection per user can be unfeasible in a publicly-hosted Internet application where the number of simultaneous users can be very large. Accordingly, developers often wish to share a “pool” of open connections between all of the application’s current users. The number of users actually performing a request at any given time is usually a very small percentage of the total number of active users, and during request processing is the only time that a database connection is required. The application itself logs into the DBMS, and handles any user account issues internally.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://commons.apache.org/proper/commons-dbcp/&quot;&gt;DBCP DOCUMENTATION&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can configure DBCP on Azure App Service Linux by following the below steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;COPY tomcat from &lt;strong&gt;/usr/local/tomcat&lt;/strong&gt; to &lt;strong&gt;/home/tomcat&lt;/strong&gt;:&lt;br /&gt;
mkdir -p /home/tomcat&lt;br /&gt;
cp -a /usr/local/tomcat/ /home/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edit &lt;strong&gt;/home/tomcat/conf/context.xml&lt;/strong&gt;:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the &quot;License&quot;); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- The contents of this file will be loaded for each web application --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Context&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Default set of monitored resources. If one of these changes, the    --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- web application will be reloaded.                                   --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;WatchedResource&amp;gt;&lt;/span&gt;WEB-INF/web.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/WatchedResource&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- In AppService we customize WatchedResource to /home/site/deployments/active --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;WatchedResource&amp;gt;&lt;/span&gt;/home/site/deployments/active&lt;span class=&quot;nt&quot;&gt;&amp;lt;/WatchedResource&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Uncomment this to disable session persistence across Tomcat restarts --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- In AppService we need to disable session persistence across Tomcat restarts--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Manager&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pathname=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Resource&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mydatasource&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javax.sql.DataSource&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jdbc:mysql://gaukmysql.mysql.database.azure.com:3306/testdb?serverTimezone=UTC&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;driverClassName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.mysql.cj.jdbc.Driver&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gauk@gaukmysql&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;password=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xxxxx&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Context&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Upload the mysql connector JAR:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b48fe95eccb7:/home/tomcat/lib# &lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;mysql-connector-java-8.0.21.jar
mysql-connector-java-8.0.21.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;LINK:&lt;/strong&gt; &lt;a href=&quot;https://dev.mysql.com/downloads/connector/j/&quot;&gt;https://dev.mysql.com/downloads/connector/j/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You would also need to give permission to the user:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'gauk'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xxxxx'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;FLUSH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIVILEGES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s all. :v:&lt;/p&gt;</content><author><name></name></author><category term="dbcp" /><category term="azure_webapp" /><category term="mysql" /><summary type="html">Many Apache projects support interaction with a relational database. Creating a new connection for each user can be time consuming (often requiring multiple seconds of clock time), in order to perform a database transaction that might take milliseconds. Opening a connection per user can be unfeasible in a publicly-hosted Internet application where the number of simultaneous users can be very large. Accordingly, developers often wish to share a “pool” of open connections between all of the application’s current users. The number of users actually performing a request at any given time is usually a very small percentage of the total number of active users, and during request processing is the only time that a database connection is required. The application itself logs into the DBMS, and handles any user account issues internally.</summary></entry><entry><title type="html">Enable Tomcat Manager app on Linux WebApp on Azure</title><link href="/tomcat/azure_webapp/2020/07/16/enable-tomcat-manager-app-on-linux-webapp-on-azure.html" rel="alternate" type="text/html" title="Enable Tomcat Manager app on Linux WebApp on Azure" /><published>2020-07-16T15:20:00+05:30</published><updated>2020-07-16T15:20:00+05:30</updated><id>/tomcat/azure_webapp/2020/07/16/enable-tomcat-manager-app-on-linux-webapp-on-azure</id><content type="html" xml:base="/tomcat/azure_webapp/2020/07/16/enable-tomcat-manager-app-on-linux-webapp-on-azure.html">&lt;p&gt;Tomcat Manager application is a simple way to deploy WAR files on Tomcat Server. Although, the default Linux WebApp which uses the Tomcat image does not have the manager app pre-installed, we can do it using the steps metioned in this blog. It should be okay to use the Manager App when running on a single instance. However, it is recommended to use &lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/Deploying-WAR-files-using-wardeploy#why-wardeploy&quot;&gt;wardeploy API&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;steps&quot;&gt;STEPS&lt;/h4&gt;

&lt;h5 id=&quot;upload-manager-app&quot;&gt;Upload manager app&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Copy the manager application from your local system to the WebApp’s /home/site/wwwroot/webapps directory&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Manager app has a configuration that restricts access only to &lt;strong&gt;&lt;em&gt;localhost&lt;/em&gt;&lt;/strong&gt;. We can remove that restriction by removing the following configuration from context.xml of the manager application:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;allow-access-from-any-ip&quot;&gt;Allow access from any IP&lt;/h5&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.RemoteAddrValve&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;allow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;copy-tomcat-to-home&quot;&gt;Copy Tomcat to /home&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;We would also need to add a user under Tomcat’s conf/tomcat-users.xml file. Since the files under only /home persist on a Linux WebApp, we can create a copy of Tomcat’s configuration under /home. The container has the logic to use Tomcat under /home is present:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;mkdir -p /home/tomcat
cp -a /usr/local/tomcat/conf /home/tomcat/conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;add-a-user-for-tomcat-manager&quot;&gt;Add a user for Tomcat Manager&lt;/h5&gt;

&lt;p&gt;Edit the tomcat-users.xml file under /home/tomcat/conf and add the following:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;role&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rolename=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;manager-gui&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;role&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rolename=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;manager-script&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;user&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tomcatgui&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;password=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s3cret&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;manager-gui&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;user&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tomcattext&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;password=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mypassword&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;manager-script&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;restart-the-webapp&quot;&gt;Restart the WebApp&lt;/h5&gt;

&lt;p&gt;That’s all. :v:&lt;/p&gt;

&lt;p&gt;You should be able to access Tomcat Manager app via webappname.azurewebsites.net/manager URL. Use the username/password configured in the previous steps to login.&lt;/p&gt;</content><author><name></name></author><category term="tomcat" /><category term="azure_webapp" /><summary type="html">Tomcat Manager application is a simple way to deploy WAR files on Tomcat Server. Although, the default Linux WebApp which uses the Tomcat image does not have the manager app pre-installed, we can do it using the steps metioned in this blog. It should be okay to use the Manager App when running on a single instance. However, it is recommended to use wardeploy API.</summary></entry><entry><title type="html">Download files from Azure Linux WebApp using pscp</title><link href="/azure_webapp/pscp/2020/06/01/download-files-from-azure-linux-webapp-using-pscp.html" rel="alternate" type="text/html" title="Download files from Azure Linux WebApp using pscp" /><published>2020-06-01T20:06:00+05:30</published><updated>2020-06-01T20:06:00+05:30</updated><id>/azure_webapp/pscp/2020/06/01/download-files-from-azure-linux-webapp-using-pscp</id><content type="html" xml:base="/azure_webapp/pscp/2020/06/01/download-files-from-azure-linux-webapp-using-pscp.html">&lt;p&gt;There are multiple ways of downloading files from Azure WebApps, some of which include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp&quot;&gt;FTP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/REST-API#vfs&quot;&gt;Kudu VFS API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is another way, which does not require you to login to the Azure Portal, and it can be used for any Docker container which has SSH enabled.&lt;/p&gt;

&lt;p&gt;:notebook_with_decorative_cover: Refer to the following documentation on how to configure SSH: &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/containers/configure-custom-container#enable-ssh&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;:exclamation: &lt;strong&gt;NOTE:&lt;/strong&gt; The documentation contains an example, and the actual commands/configurations would also depend on the base image being used in the Dockerfile.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Here is how you can use pscp to copy files to a WebApp for Containers (Linux) on Azure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create a remote connection using a tcp tunnel to your web app:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az webapp create-remote-connection -g RESOURCE_GROUP -n APP_NAME -p 2222&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then copy the required files using pscp:
[ &lt;a href=&quot;https://www.ssh.com/ssh/putty/putty-manuals/0.68/Chapter5.html&quot;&gt;PSCP&lt;/a&gt; is part of the PuTTY tool suite for Windows ]&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pscp -P 2222 root@localhost:/home/test.log .&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;:exclamation: &lt;strong&gt;NOTE:&lt;/strong&gt; You would need to provide the root password here. This is usually set using the following directive:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RUN echo &quot;root:Docker!&quot; | chpasswd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s it! :v:&lt;/p&gt;</content><author><name></name></author><category term="azure_webapp" /><category term="pscp" /><summary type="html">There are multiple ways of downloading files from Azure WebApps, some of which include:</summary></entry></feed>